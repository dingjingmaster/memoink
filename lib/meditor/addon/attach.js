"use strict";import "../../layer/index.js";importCss("/css/meditor__attach.css");const $doc=Anot(document),LANGUAGES={zh:{IMAGE:{REMOTE:"远程图片",LOCAL:"本地上传",MANAGE:"图片管理",ALT:"图片描述",ADDRESS:"图片地址"},FILE:{REMOTE:"远程附件",LOCAL:"本地上传",MANAGE:"附件管理",ALT:"附件描述",ADDRESS:"附件地址"},BTN:"确定",INSERT:"插入",CHOOSE:"选择文件",LIMIT:"上传大小限制:单文件最大 ",SCREENSHOT:"截图",COMPRESS:"截图处理中...",TABLE:{NAME:"文件名",PROGRESS:"上传进度",HANDLE:"操作"},ERROR:{TYPE:"文件类型错误",SIZE:"文件体积过大",EMPTY:"描述和地址不能为空"}},en:{IMAGE:{REMOTE:"Remote image",LOCAL:"Local image",MANAGE:"Manage",ALT:"Image alt text",ADDRESS:"Image address"},FILE:{REMOTE:"Remote file",LOCAL:"Local file",MANAGE:"Manage",ALT:"File alt text",ADDRESS:"File address"},BTN:"OK",INSERT:"insert",CHOOSE:"Choose file",LIMIT:"Size of upload file limit to ",SCREENSHOT:"screenshot",COMPRESS:"Screenshot compressing...",TABLE:{NAME:"name",PROGRESS:"progress",HANDLE:"handle"},ERROR:{TYPE:"Forbidden type",SIZE:"Too large",EMPTY:"Alt text and address can not be null"}}};LANGUAGES["zh-CN"]=LANGUAGES.zh,LANGUAGES["zh-TW"]=LANGUAGES.zh;const lang=LANGUAGES[window.__ENV_LANG__||navigator.language]||LANGUAGES.en;class Uploader{constructor(e){this.url=e,this.xhr=new XMLHttpRequest,this.form=new FormData}field(e,t){return this.form.append(e,t),this}onProgress(e){return this.progress=e,this}then(e){this.url||Anot.error("invalid upload url");let t=Promise.defer();return this.xhr.open("POST",this.url,!0),this.xhr.upload.addEventListener("progress",e=>{if(e.lengthComputable&&this.progress){let t=Math.round(100*e.loaded/e.total);this.progress(t)}},!1),this.xhr.onreadystatechange=(()=>{if(4===this.xhr.readyState)if(this.xhr.status>=200&&this.xhr.status<205){let a=this.xhr.responseText;try{a=JSON.parse(a)}catch(e){}t.resolve(e(a))}else t.reject(this.xhr)}),this.xhr.send(this.form),t.promise}}const fixCont=function(e,t){let a=!1;return e.props.uploadSizeLimit&&(a=(e.props.uploadSizeLimit/1048576).toFixed(2)),`\n  <dl class="do-meditor-attach">\n    <dt class="tab-box" :drag="do-layer" data-limit="window">\n      <span class="item" :class="active:tab === 1" :click="switchTab(1)">\n        ${lang[t].REMOTE}\n      </span>\n      <span class="item" :class="active:tab === 2" :click="switchTab(2)">\n        ${lang[t].LOCAL}\n      </span>\n      <span class="item" :class="active:tab === 3" :click="switchTab(3)">\n        ${lang[t].MANAGE}\n      </span>\n    </dt>\n    <dd class="cont-box">\n      <div class="remote" :visible="tab === 1">\n        <section class="section do-fn-cl">\n          <input \n            class="do-meditor__input" \n            :duplex="attachAlt" \n            placeholder="${lang[t].ALT}" />\n        </section>\n        <section class="section do-fn-cl">\n          <input \n            class="do-meditor__input" \n            :duplex="attach" \n            placeholder="${lang[t].ADDRESS}" />\n        </section>\n        <section class="section do-fn-cl">\n          <a \n            href="javascript:;" \n            class="do-meditor__button submit" \n            :click="confirm">${lang.BTN}</a>\n        </section>\n      </div>\n      <div class="local" :visible="tab === 2">\n        <div class="select-file">\n          <input ref="attach" multiple :change="change" type="file" class="hide" />\n          <span class="file" :click="select">${lang.CHOOSE}</span>\n          ${a?`<span class="tips">(${lang.LIMIT+a} MB)</span>`:""}\n        </div>\n        <ul class="upload-box">\n          <li class="thead">\n            <span class="col">${lang.TABLE.NAME}</span>\n            <span class="col">${lang.TABLE.PROGRESS}</span>\n            <span class="col">${lang.TABLE.HANDLE}</span>\n          </li>\n          <li class="tbody">\n            <p :for="uploadQueue">\n              <span \n                class="col do-fn-ell" \n                :text="el.name" \n                :layer-tips="el.name"></span>\n              <span class="col" :html="el.progress"></span>\n              <span class="col"><a class="insert" :click="insert(el)">${lang.INSERT}</a></span>\n            </p>\n          </li>\n        </ul>\n      </div>\n      <div class="manager" :visible="tab === 3">\n        <ul class="list-box">\n          <li \n            class="item" \n            :for="attachList"\n            :layer-tips="el.name"\n            :click="insert(el)">\n\n            <span class="thumb" :html="el.thumb"></span>\n            <p class="name" :text="el.name"></p>\n          </li>\n        </ul>\n        \n      </div>\n    </dd>\n  </dl>`};function uploadFile(e,t){for(let a of this.files){let s=a.name.slice(a.name.lastIndexOf("."));if("IMAGE"===t&&!/^\.(jpg|jpeg|png|gif|bmp|webp|ico)$/.test(s)){this.uploadQueue.push({name:a.name,progress:'<span class="red">0%('+lang.ERROR.TYPE+")</span>",url:""});continue}if(e.props.uploadSizeLimit&&a.size>e.props.uploadSizeLimit){this.uploadQueue.push({name:a.name,progress:'<span class="red">0%('+lang.ERROR.SIZE+")</span>",url:""});continue}let n=this.uploadQueue.length,l=(new Date).format("YmdHis")+s,i={name:a.name,fixName:l,progress:"0%",url:""},o=new Uploader(e.props.uploadUrl).field("file",a);this.uploadQueue.push(i),e.props.beforeUpload?e.props.beforeUpload(i,o).then(t=>t?o.onProgress(e=>{this.uploadQueue[n].progress=e+"%"}).then(t=>e.props.afterUpload?e.props.afterUpload(t):t.data.url):Promise.reject("something wrong with beforeUpload")).then(e=>{this.uploadQueue[n].url=e}).catch(e=>{Anot.error(e)}):o.onProgress(e=>{this.uploadQueue[n].progress=e+"%"}).then(t=>e.props.afterUpload?e.props.afterUpload(t):t.data.url).then(e=>{this.uploadQueue[n].url=e}).catch(e=>{Anot.error(e)})}}function uploadScreenshot(e,t){let a={name:(new Date).format("YmdHis")+".jpg",url:""},s=new Uploader(e.props.uploadUrl).field("file",t);e.props.beforeUpload?e.props.beforeUpload(a,s).then(t=>t?s.then(t=>e.props.afterUpload?e.props.afterUpload(t):t.data.url):Promise.reject("something wrong with beforeUpload")).then(t=>{e.insert(`![${lang.SCREENSHOT}](${t})`)}).catch(e=>{Anot.error(e)}):s.then(t=>e.props.afterUpload?e.props.afterUpload(t):t.data.url).then(t=>{e.insert(`![${lang.SCREENSHOT}](${t})`)})}function showDialog(e,t,a){let s=Anot(e).offset();layer.open({type:7,menubar:!1,fixed:!0,maskClose:!0,offset:[s.top+35-$doc.scrollTop()],shift:{top:s.top-$doc.scrollTop()},tab:2,attach:"",attachAlt:"",uploadQueue:[],attachList:[],switchTab(e){this.tab=e,3===e&&(this.attachList.clear(),t.props.getAttachList&&t.props.getAttachList(a).then(e=>(e.forEach(e=>{let t=e.name.slice(e.name.lastIndexOf("."));e.isImage=/^\.(jpg|jpeg|png|gif|bmp|webp|ico)$/.test(t),e.thumb=e.isImage?`<img src="${e.url}" />`:'<em class="do-icon-txt"></em>'}),e)).then(e=>{e=e.filter(e=>"IMAGE"!==a||e.isImage),this.attachList=e}))},select(){let e=document.createEvent("MouseEvent");e.initEvent("click",!1,!1),this.$refs.attach.dispatchEvent(e)},change(e){this.files=e.target.files,uploadFile.call(this,t,a)},insert:function(e){if(!e.url)return;let s=`\n${"IMAGE"===a?"!":""}[${e.name}](${e.url})`;t.insert(s)},confirm:function(){if(!this.attach||!this.attachAlt)return layer.toast(lang.ERROR.EMPTY,"error");let e=`\n${"IMAGE"===a?"!":""}[${this.attachAlt}](${this.attach})`;t.insert(e),this.close()},content:fixCont(t,a)})}const plugin={__init__(e){Object.assign(e.vm.addon,{attach(e){showDialog(e,this,"FILE")},image(e){showDialog(e,this,"IMAGE")}}),e.vm.$refs.editor.addEventListener("paste",function(t){if(t.preventDefault(),!t.clipboardData.getData("text/plain")&&t.clipboardData.items){let a=t.clipboardData.items,s=(a.length,null);for(let e of a)e.type.indexOf("image")>-1&&(s=e.getAsFile());if(null!==s){layer.toast(lang.COMPRESS);let t=new FileReader;t.onload=function(){let t=document.createElement("img"),a=document.createElement("canvas");t.onload=function(){a.width=t.width,a.height=t.height;let s=a.getContext("2d");if(s.clearRect(0,0,a.width,a.height),s.drawImage(this,0,0,a.width,a.height),a.toBlob&&(window.chrome||window.sidebar))a.toBlob(function(t){uploadScreenshot(e.vm,t)},"image/jpeg",.8);else{let t=a.toDataURL("image/jpeg",.8),s=atob(t.split(",")[1]),n=new Uint8Array(s.length),l=null;for(let e=0;e<s.length;e++)n[e]=s.charCodeAt(e);l=new Blob([n],{type:"image/jpeg"}),uploadScreenshot(e.vm,l)}},t.src=this.result},t.readAsDataURL(s)}}})}};export default plugin;